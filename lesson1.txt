

How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Using diff only shows where the old and new versions differ.
If we save different versions frequently, we can both use it to keep track of intended changes and errors.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can find your errors faster.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro: With automatically saving, you would have to many versions to keep track of. 
Cons: Sometimes, forgetting to save frequently can lead to large differences between commits.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Related changes are commited together. It depends on what kind of documents they are mostly used for.

How can you use the commands git log and git diff to view the history of files?

    By typing them.

How might using version control make you more confident to make changes that
could break something?

    You can easily revert your changes.

Now that you have your workspace set up, what do you want to try using Git for?

    Stuff!